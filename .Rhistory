which.regimen
order.pts
lungData[1:2,1:3]
heatmap.2(as.matrix(log2(2+response))[order.pts,],col=colorRampPalette(c('#FFFFFF','#0000FF'))(200), trace='none',Colv=NULL,Rowv=NULL,dendrogram='none',cexRow=0.3,cexCol=0.7,key=T,key.xlab ='log2(response length)',main='heatmap of response length \n at log2 scale',RowSideColors=c('green','red')[factor(lungData[order.pts,'Pt_Deceased'])],cellnote=myMat2)
legened(0,1,legend=c('Deceased:','No','Yes'),col=c('black','green','red'),pch=c(NA,15,15))
legend(0,1,legend=c('Deceased:','No','Yes'),col=c('black','green','red'),pch=c(NA,15,15))
legend(0,2,legend=c('Deceased:','No','Yes'),col=c('black','green','red'),pch=c(NA,15,15),cex=0.5)
legend(0,4,legend=c('Deceased:','No','Yes'),col=c('black','green','red'),pch=c(NA,15,15),cex=0.5)
heatmap.2(as.matrix(log2(2+response))[order.pts,],col=colorRampPalette(c('#FFFFFF','#0000FF'))(200), trace='none',Colv=NULL,Rowv=NULL,dendrogram='none',cexRow=0.3,cexCol=0.7,key=T,key.xlab ='log2(response length)',main='heatmap of response length \n at log2 scale',RowSideColors=c('green','red')[factor(lungData[order.pts,'Pt_Deceased'])],cellnote=myMat2)
legend(0,4,legend=c('Deceased:','No','Yes'),col=c('black','green','red'),pch=c(NA,15,15),cex=0.5)
legend(0,10,legend=c('Deceased:','No','Yes'),col=c('black','green','red'),pch=c(NA,15,15),cex=0.5)
heatmap.2(as.matrix(log2(2+response))[order.pts,],col=colorRampPalette(c('#FFFFFF','#0000FF'))(200), trace='none',Colv=NULL,Rowv=NULL,dendrogram='none',cexRow=0.3,cexCol=0.7,key=T,key.xlab ='log2(response length)',main='heatmap of response length \n at log2 scale',RowSideColors=c('green','red')[factor(lungData[order.pts,'Pt_Deceased'])],cellnote=myMat2)
legend(1,1,legend=c('Deceased:','No','Yes'),col=c('black','green','red'),pch=c(NA,15,15),cex=0.5)
pdf('heatmap_log2response.pdf')
heatmap.2(as.matrix(log2(2+response))[order.pts,],col=colorRampPalette(c('#FFFFFF','#0000FF'))(200), trace='none',Colv=NULL,Rowv=NULL,dendrogram='none',cexRow=0.3,cexCol=0.7,key=T,key.xlab ='log2(response length)',main='heatmap of response length \n at log2 scale',RowSideColors=c('green','red')[factor(lungData[order.pts,'Pt_Deceased'])],cellnote=myMat2)
legend(1,1,legend=c('Deceased:','No','Yes'),col=c('black','green','red'),pch=c(NA,15,15),cex=0.5)
dev.off()
```
pdf('heatmap_log2response.pdf')
heatmap.2(as.matrix(log2(2+response))[order.pts,],col=colorRampPalette(c('#FFFFFF','#0000FF'))(200), trace='none',Colv=NULL,Rowv=NULL,dendrogram='none',cexRow=0.3,cexCol=0.7,key=T,key.xlab ='log2(response length)',main='heatmap of response length \n at log2 scale',RowSideColors=c('green','red')[factor(lungData[order.pts,'Pt_Deceased'])],cellnote=myMat2)
legend(0,1,legend=c('Deceased:','No','Yes'),col=c('black','green','red'),pch=c(NA,15,15),cex=0.5)
dev.off()
pdf('heatmap_log2response.pdf')
heatmap.2(as.matrix(log2(2+response))[order.pts,],col=colorRampPalette(c('#FFFFFF','#0000FF'))(200), trace='none',Colv=NULL,Rowv=NULL,dendrogram='none',cexRow=0.3,cexCol=0.7,key=T,keysize=1,key.xlab ='log2(response length)',main='heatmap of response length \n at log2 scale',RowSideColors=c('green','red')[factor(lungData[order.pts,'Pt_Deceased'])],cellnote=myMat2)
legend(0.1,0.6,legend=c('Deceased:','No','Yes'),col=c('black','green','red'),pch=c(NA,15,15),cex=0.5)
dev.off()
pdf('heatmap_log2response.pdf')
heatmap.2(as.matrix(log2(2+response))[order.pts,],col=colorRampPalette(c('#FFFFFF','#0000FF'))(200), trace='none',Colv=NULL,Rowv=NULL,dendrogram='none',cexRow=0.3,cexCol=0.7,key=T,keysize=1,key.xlab ='log2(response length)',main='heatmap of response length \n at log2 scale',RowSideColors=c('green','red')[factor(lungData[order.pts,'Pt_Deceased'])],cellnote=myMat2)
legend(0,0.6,legend=c('Deceased:','No','Yes'),col=c('black','green','red'),pch=c(NA,15,15),cex=0.5)
dev.off()
pdf('heatmap_log2response.pdf')
heatmap.2(as.matrix(log2(2+response))[order.pts,],col=colorRampPalette(c('#FFFFFF','#0000FF'))(200), trace='none',Colv=NULL,Rowv=NULL,dendrogram='none',cexRow=0.3,cexCol=0.7,key=T,keysize=1,key.xlab ='log2(response length)',main='heatmap of response length \n at log2 scale',RowSideColors=c('green','red')[factor(lungData[order.pts,'Pt_Deceased'])],cellnote=myMat2)
legend(-0.05,0.5,legend=c('Deceased:','No','Yes'),col=c('black','green','red'),pch=c(NA,15,15),cex=0.5)
dev.off()
pdf('heatmap_log2response.pdf')
heatmap.2(as.matrix(log2(2+response))[order.pts,],col=colorRampPalette(c('#FFFFFF','#0000FF'))(200), trace='none',Colv=NULL,Rowv=NULL,dendrogram='none',cexRow=0.3,cexCol=0.7,key=T,keysize=1,key.xlab ='log2(response length)',main='heatmap of response length \n at log2 scale',RowSideColors=c('green','red')[factor(lungData[order.pts,'Pt_Deceased'])],cellnote=myMat2)
legend(0,0.5,legend=c('Deceased:','No','Yes'),col=c('black','green','red'),pch=c(NA,15,15),cex=0.4)
dev.off()
pdf('heatmap_log2response.pdf')
heatmap.2(as.matrix(log2(2+response))[order.pts,],col=colorRampPalette(c('#FFFFFF','#0000FF'))(200), trace='none',Colv=NULL,Rowv=NULL,dendrogram='none',cexRow=0.3,cexCol=0.7,key=T,keysize=1,key.xlab ='log2(response time)',main='heatmap of response length \n at log2 scale',RowSideColors=c('green','red')[factor(lungData[order.pts,'Pt_Deceased'])],cellnote=myMat2)
legend(0,0.5,legend=c('Deceased:','No','Yes'),col=c('black','green','red'),pch=c(NA,15,15),cex=0.4)
dev.off()
selectedPts2
response[,1]
dir()
lungData2 <- read.xls('BRAF-Lung_withResponse1Status.xlsx',as.is=TRUE,header=TRUE)
colnames(lungData2)
lungData2 <- read.xls('BRAF-Lung_withResponse1Status.xlsx',as.is=TRUE,header=TRUE)
lungData2 <-lungData2[,-grep('X',colnames(lungData2))]
rownames(lungData2) <- lungData2$IPCT_No
myData <- data.frame(time=response[,1],response1=lungData2$treatment1_complete,VemFirst=rep('no',nrow(lungData2)))
selectedPts2
rownames(myData) <- rownames(lungData2)
myData[selectedPts2,'VemFirst'] <- 'yes'
myData[selectedPts2,'VemFirst']
head(myData)
myData[selectedPts2,]
myData
myData <- data.frame(time=response[,1],response1=lungData2$treatment1_complete,VemFirst=rep('no',nrow(lungData2)))
rownames(myData) <- rownames(lungData2)
myData[selectedPts2,'VemFirst']
myData <- data.frame(time=response[,1],response1=lungData2$treatment1_complete,VemFirst=rep('no',nrow(lungData2)),stringsAsFactors=FALSE)
rownames(myData) <- rownames(lungData2)
myData[selectedPts2,'VemFirst'] <- 'yes'
myData
library(survival)
mfit.response1 = survfit(Surv(time,response1 ==1)~VemFirst, data =myData)
class(myData[,1])
class(myData[,2])
class(myData[,3])
surv.diff=survdiff(Surv(time,response1 ==1)~VemFirst, data =myData)
mfit.response1$n
mfit.response1
str(mfit.response1)
mfit.response1$strata
names(mfit.response1$strata)
mfit.response1$n
plot(mfit.response1 , xlab="Response time (days)",lwd=2, ylab="Survival Function",main=paste0('Lung Cancer Patients (N=',sum(mfit.response1$n),')'), col=c("blue","orangered"))
legend('topright',legend=paste0(names(mfit.response1$strata),' (n=',mfit.response1$n,')'), col=c("blue","orangered"),lwd=2)
surv.diff
surv.diff=survdiff(Surv(time,response1 ==1)~VemFirst, data =myData)
plot(mfit.response1 , xlab="Response time (days)",lwd=2, ylab="Survival Function",main=paste0('Lung Cancer Patients (N=',sum(mfit.response1$n),')\n p=',signif(1-pchisq(surv.diff$chisq,df=1),4)), col=c("blue","orangered"))
legend('topright',legend=paste0(names(mfit.response1$strata),' (n=',mfit.response1$n,')'), col=c("blue","orangered"),lwd=2)
plot(mfit.response1 , xlab="Response time (days)",lwd=2, ylab="Survival Function",main=paste0('Lung Cancer Patients (N=',sum(mfit.response1$n),')\n p=',signif(1-pchisq(surv.diff$chisq,df=1),3)), col=c("blue","orangered"))
legend('topright',legend=paste0(names(mfit.response1$strata),' (n=',mfit.response1$n,')'), col=c("blue","orangered"),lwd=2)
save.image('BRAFstudy2.RData')
myData
colnames(lungData)
myData2$response1[lungData$Pt_Deceased]
myData2 <- data.frame(time=response[,1],response1=rep(1,nrow(lungData)),VemFirst=rep('no',nrow(lungData)),stringsAsFactors=FALSE)
rownames(myData2) <- rownames(lungData)
myData2$response1[lungData$Pt_Deceased]
table(lungData$Pt_Deceased)
lungData$Trt_StartDate2
myData2 <- data.frame(time=response[,1],response1=rep(1,nrow(lungData)),VemFirst=rep('no',nrow(lungData)),stringsAsFactors=FALSE)
rownames(myData2) <- rownames(lungData)
myData2$response1[which(lungData$Pt_Deceased=='N'&lungData$Trt_StartDate2==''] <- 0
myData2$response1[is.na(myData2$time)] <- NA
myData2[selectedPts2,'VemFirst'] <- 'yes'
myData2 <- data.frame(time=response[,1],response1=rep(1,nrow(lungData)),VemFirst=rep('no',nrow(lungData)),stringsAsFactors=FALSE)
rownames(myData2) <- rownames(lungData)
myData2$response1[which(lungData$Pt_Deceased=='N'&lungData$Trt_StartDate2=='')] <- 0
myData2$response1[is.na(myData2$time)] <- NA
myData2[selectedPts2,'VemFirst'] <- 'yes'
data.frame(myData,myData2)
temp =myData
myData <- data.frame(time=response[,1],response1=rep(1,nrow(lungData)),VemFirst=rep('no',nrow(lungData)),stringsAsFactors=FALSE)
rownames(myData) <- rownames(lungData)
myData$response1[which(lungData$Pt_Deceased=='N'&lungData$Trt_StartDate2=='')] <- 0
myData$response1[is.na(myData$time)] <- NA
myData[selectedPts2,'VemFirst'] <- 'yes'
all(temp==myData)
all(temp==myData,na.rm=T)
mfit.response1 = survfit(Surv(time,response1 ==1)~VemFirst, data =myData)
surv.diff=survdiff(Surv(time,response1 ==1)~VemFirst, data =myData)
plot(mfit.response1 , xlab="Response time (days)",lwd=2, ylab="Survival Function",main=paste0('Lung Cancer Patients (N=',sum(mfit.response1$n),')\n p=',signif(1-pchisq(surv.diff$chisq,df=1),3)), col=c("blue","orangered"))
legend('topright',legend=paste0(names(mfit.response1$strata),' (n=',mfit.response1$n,')'), col=c("blue","orangered"),lwd=2)
mfit.response1 = survfit(Surv(time,response1 ==1)~VemFirst, data =myData)
surv.diff=survdiff(Surv(time,response1 ==1)~VemFirst, data =myData)
plot(mfit.response1 , xlab="Response time (days)",lwd=2, ylab="Survival Function",main=paste0('Lung Cancer Patients (N=',sum(mfit.response1$n),')\n p=',signif(1-pchisq(surv.diff$chisq,df=1),3)), col=c("blue","orangered"))
legend('topright',legend=paste0(names(mfit.response1$strata),' (n=',mfit.response1$n,')'), col=c("blue","orangered"),lwd=2)
all(temp==myData,na.rm=T)
patient <- subPts[1]
response1[patient,]
patient <- subPts[2]
response1[patient,]
getwd()
x=startDate-endDate
dim(x)
head(x)
head(lungData[,grep('Trt_StartDate',colnames(lungData))])
lungData[,grep('Trt_EndDate',colnames(lungData))]
x
getwd()
rm(list=ls())
setwd('/workspace/ywang31/Krahe090313/LFS_methylation/')
library(ClassComparison)
library(ClassDiscovery)
load('LFS_PCA081015.RData')
sarc.clinic <- read.delim('/rsrch1/bcb/batcheffects/STD_DATA/CLINICAL_STANDARD/current/sarc/clin/bio_nationwidechildrens.org/Level_2/clinical_patient_clinical.tsv',header=F, sep='\t',skip=3,as.is=T)
colnames(sarc.clinic) <- read.delim('/rsrch1/bcb/batcheffects/STD_DATA/CLINICAL_STANDARD/current/sarc/clin/bio_nationwidechildrens.org/Level_2/clinical_patient_clinical.tsv',header=F, sep='\t',nrow=1,as.is=T)
dim(sarc.clinic)
table(sarc.clinic$histologic_diagnosis)
sarc.methyData <- read.delim("/rsrch1/bcb/batcheffects/STD_DATA/STANDARDIZED/current/sarc/methylation/humanmethylation450_methNOxy/Level_3/matrix_data.tsv",as.is=T)
rownames(sarc.methyData) <- sarc.methyData$X
sarc.methyData <- sarc.methyData[,-1]
colnames(sarc.methyData) <- gsub('\\.','-',colnames(sarc.methyData))
sarc.methyData <- sarc.methyData[,substr(colnames(sarc.methyData),14,15)%in%c('01','11')]
dim(sarc.methyData)
colnames(sarc.methyData)[which(substr(colnames(sarc.methyData),14,15)=='11')]
sarc.clinic$histologic_diagnosis[which(sarc.clinic$bcr_patient_barcode=='TCGA-FX-A48G')]
sarc.clinic$histologic_diagnosis[which(sarc.clinic$bcr_patient_barcode=='TCGA-IF-A4AJ')]
sarc.clinic$histologic_diagnosis[which(sarc.clinic$bcr_patient_barcode=='TCGA-K1-A42X')]
sarc.clinic$histologic_diagnosis[which(sarc.clinic$bcr_patient_barcode=='TCGA-KF-A41W')]
sarc.type <- sarc.clinic$histologic_diagnosis[match(substr(colnames(sarc.methyData),1,12),sarc.clinic$bcr_patient_barcode)]
sarc.type[substr(colnames(sarc.methyData),14,15)=='11'] <- 'Normal'
sub.sarc.methyData <- sarc.methyData[,!is.na(sarc.type)]
sub.sarc.type <- sarc.type[!is.na(sarc.type)]
sub.sarc.type[sub.sarc.type=='Dedifferentiated liposarcoma'] <- 'LPS'
sub.sarc.type[sub.sarc.type=='Leiomyosarcoma (LMS)'] <- 'LMS'
sub.sarc.type[grep("ynovial",sub.sarc.type)] <- 'Synovial'
sub.sarc.type[grep("Giant",sub.sarc.type)] <- 'Other'
sub.sarc.type[sub.sarc.type=='Desmoid Tumor'] <- 'Other'
sub.sarc.type[grep("Undifferentiated ",sub.sarc.type)] <- 'UPS'
sub.sarc.type[grep("MPNST",sub.sarc.type)] <- 'MPNST'
table(sub.sarc.type)
SY.data <- read.csv('CorrelationResults-TopProbes.csv',as.is=T)
sub2.sarc.methyData <- sub.sarc.methyData[SY.data$methy.rownames,]
col1 <- rainbow(9)
col1[5] <- 'black'
pch1 <- rep(1,length(sub.sarc.type))
pch1[sub.sarc.type=='Normal'] <- 20
pc1.scale<-prcomp(na.omit(sub2.sarc.methyData),scale=T,tol=0)
plot(pc1.scale$rotation[,1],pc1.scale$rotation[,2],xlab='PC1',ylab='PC2',col=col1[factor(sub.sarc.type)],main=paste0('TCGA SARC data \n n.probes= ',nrow(na.omit(sub2.sarc.methyData)),'; %variance= ',signif(100*(cumsum((pc1.scale$sdev)^2)/sum((pc1.scale$sdev)^2))[2],3),'%'),pch=pch1)
legend('bottomleft',legend=attributes(factor(sub.sarc.type))$levels,col=col1,pch=c(1,1,1,1,20,1,1,1),text.col=col1,cex=0.6)
abline(h=0,v=0, col="brown", lty=2)
text.which <- which(sub.sarc.type=='Normal')
text(pc1.scale$rotation[text.which,1], pc1.scale$rotation[text.which,2],labels =substr(rownames(pc1.scale$rotation)[text.which],1,16),pos=4,cex=0.7)
to.which <- sapply(text.which,function(x){which(substr(rownames(pc1.scale$rotation),1,12)==substr(rownames(pc1.scale$rotation)[x],1,12)&substr(rownames(pc1.scale$rotation),14,15)=='01')})
segments(x0=pc1.scale$rotation[text.which,1],
y0=pc1.scale$rotation[text.which,2],
x1=pc1.scale$rotation[to.which,1],
y1=pc1.scale$rotation[to.which,2]
)
load('/rsrch1/bcb/kabaggerly/PIs/Krahe/LFS_Methylation/kraheLFSBetaValues.RData')
load('/rsrch1/bcb/kabaggerly/PIs/Krahe/LFS_Methylation/illumina450kAnnotation.RData')
si <- read.csv("sampleInfo.csv",header=F,as.is=T)
sub1.betaMat <- na.omit(betaMat)
#sub2.betaMat <- sub1.betaMat[,1:14]-sub1.betaMat[,si$V3[match(colnames(sub1.betaMat)[1:14],si$V1)]]
sub2.si <- si$V2[match(colnames(sub2.betaMat),si$V1)]
sub3.si <- c(sub2.si,rep('normal',3))
common.probes <- intersect(sapply(rownames(na.omit(sub2.sarc.methyData)),function(x)unlist(strsplit(x,'-'))[2]),rownames(sub1.betaMat))
length(common.probes)
head(common.probes)
length(intersect(common.probes,rownames(HM900.data)))
load('HM900.data.RData')
length(intersect(common.probes,rownames(HM900.data)))
sub3.betaMat <-sub1.betaMat[common.probes,]
sub4.sarc.methyData <- sub2.sarc.methyData[match(common.probes,sapply(rownames(sub2.sarc.methyData),function(x)unlist(strsplit(x,'-'))[2])),]
dim(sub3.betaMat)
common.probes<- intersect(common.probes,rownames(HM900.data))
length(common.probes)
sub3.betaMat <-sub1.betaMat[common.probes,]
sub4.sarc.methyData <- sub2.sarc.methyData[match(common.probes,sapply(rownames(sub2.sarc.methyData),function(x)unlist(strsplit(x,'-'))[2])),]
dim(sub3.betaMat)
col1
rainbow(9)
col1 <- rainbow(9)
col1[5] <- 'black'
col1[1] <- 'lightgrey'
plot(pc1.scale$rotation[,1],pc1.scale$rotation[,2],xlab='PC1',ylab='PC2',col=col1[factor(sub.sarc.type)],main=paste0('TCGA SARC data \n n.probes= ',nrow(na.omit(sub2.sarc.methyData)),'; %variance= ',signif(100*(cumsum((pc1.scale$sdev)^2)/sum((pc1.scale$sdev)^2))[2],3),'%'),pch=pch1)
legend('bottomleft',legend=attributes(factor(sub.sarc.type))$levels,col=col1,pch=c(1,1,1,1,20,1,1,1),text.col=col1,cex=0.6)
abline(h=0,v=0, col="brown", lty=2)
text.which <- which(sub.sarc.type=='Normal')
text(pc1.scale$rotation[text.which,1], pc1.scale$rotation[text.which,2],labels =substr(rownames(pc1.scale$rotation)[text.which],1,16),pos=4,cex=0.7)
to.which <- sapply(text.which,function(x){which(substr(rownames(pc1.scale$rotation),1,12)==substr(rownames(pc1.scale$rotation)[x],1,12)&substr(rownames(pc1.scale$rotation),14,15)=='01')})
segments(x0=pc1.scale$rotation[text.which,1],
y0=pc1.scale$rotation[text.which,2],
x1=pc1.scale$rotation[to.which,1],
y1=pc1.scale$rotation[to.which,2]
)
length(common.probes)
sub3.betaMat <-sub1.betaMat[common.probes,]
sub4.sarc.methyData <- sub2.sarc.methyData[match(common.probes,sapply(rownames(sub2.sarc.methyData),function(x)unlist(strsplit(x,'-'))[2])),]
sub1.HM900.data <- HM900.data[common.probes,]
dim(sub3.betaMat)
dim(sub1.HM900.data)
pc3.scale<-prcomp(t(sub3.betaMat),scale=T,tol=0)
col2 <- c('black','deeppink','darkorange','chartreuse')
plot(pc3.scale$x[,1],pc3.scale$x[,2],xlab='PC1',ylab='PC2',col=col2[factor(sub3.si)],main=paste0('Krahe data \n n.probes= ',nrow(sub3.betaMat),'; %variance= ',signif(100*(cumsum((pc3.scale$sdev)^2)/sum((pc3.scale$sdev)^2))[2],3),'%'),pch=15,xlim=c(-15,12))
text(pc3.scale$x[,1], pc3.scale$x[,2],labels =rownames(pc3.scale$x),col=col2[factor(sub3.si)],pos=c(3,2,rep(4,4),rep(2,4),3,4,2,1,2,3,1),cex=0.7)
legend('bottomleft',legend=attributes(factor(sub3.si))$levels,col=col2,pch=15,text.col=col2)
#abline(h=0, col="brown", lty=2)
projected.sub4.sarc.methyData <- scale(t(sub4.sarc.methyData), pc3.scale$center, pc3.scale$scale) %*% pc3.scale$rotation
plot(pc3.scale$x[,1],pc3.scale$x[,2],xlab='PC1',ylab='PC2',col=col2[factor(sub3.si)],main=paste0('Krahe data \n n.probes= ',nrow(sub3.betaMat),'; %variance= ',signif(100*(cumsum((pc3.scale$sdev)^2)/sum((pc3.scale$sdev)^2))[2],3),'%'),pch=15,xlim=1.1*range(projected.sub4.sarc.methyData[,1]),ylim=1.1*range(projected.sub4.sarc.methyData[,2]))
text(pc3.scale$x[,1], pc3.scale$x[,2],labels =rownames(pc3.scale$x),col=col2[factor(sub3.si)],pos=c(3,2,rep(4,4),rep(2,4),3,4,2,1,2,4,1),cex=0.7)
pch <- rep(1,nrow(projected.sub4.sarc.methyData))
pch[sub.sarc.type=='Normal'] <- 25
points(projected.sub4.sarc.methyData[,1],projected.sub4.sarc.methyData[,2],col=col1[factor(sub.sarc.type)],pch=pch)
comb.si <- c(sub.sarc.type,sub3.si)
col3 <- c(col1[1:5],col2[1:2],col1[6],col2[3:4],col1[7:8])
legend('bottomleft',legend=attributes(factor(comb.si))$levels,col=col3,pch=c(rep(1,4),15,25,15,15,1,1),text.col=col3,cex=0.7)
projected.sub1.HM900.data <- scale(t(sub1.HM900.data),pc3.scale$center, pc3.scale$scale) %*% pc3.scale$rotation
head(sub1.HM900.data)
points(projected.sub1.HM900.data[,1],projected.sub1.HM900.data[,2],col=c('blue','red')[factor(rep(c('900kNormal','900kTumor'),8))],pch='X')
legend('bottom',legend=attributes(factor(rep(c('900kNormal','900kTumor'),8)))$levels,col=c('blue','red'),pch='X',text.col=c('blue','red'),cex=0.7)
pdf('PCA_3datasets.pdf')
plot(pc3.scale$x[,1],pc3.scale$x[,2],xlab='PC1',ylab='PC2',col=col2[factor(sub3.si)],main=paste0('Krahe data \n n.probes= ',nrow(sub3.betaMat),'; %variance= ',signif(100*(cumsum((pc3.scale$sdev)^2)/sum((pc3.scale$sdev)^2))[2],3),'%'),pch=15,xlim=1.1*range(projected.sub4.sarc.methyData[,1]),ylim=1.1*range(projected.sub4.sarc.methyData[,2]))
text(pc3.scale$x[,1], pc3.scale$x[,2],labels =rownames(pc3.scale$x),col=col2[factor(sub3.si)],pos=c(3,2,rep(4,4),rep(2,4),3,4,2,1,2,4,1),cex=0.7)
pch <- rep(1,nrow(projected.sub4.sarc.methyData))
pch[sub.sarc.type=='Normal'] <- 25
points(projected.sub4.sarc.methyData[,1],projected.sub4.sarc.methyData[,2],col=col1[factor(sub.sarc.type)],pch=pch)
comb.si <- c(sub.sarc.type,sub3.si)
col3 <- c(col1[1:5],col2[1:2],col1[6],col2[3:4],col1[7:8])
legend('bottomleft',legend=attributes(factor(comb.si))$levels,col=col3,pch=c(rep(1,4),15,25,15,15,1,1),text.col=col3,cex=0.7)
points(projected.sub1.HM900.data[,1],projected.sub1.HM900.data[,2],col=c('blue','red')[factor(rep(c('900kNormal','900kTumor'),8))],pch='X')
legend('bottom',legend=attributes(factor(rep(c('900kNormal','900kTumor'),8)))$levels,col=c('blue','red'),pch='X',text.col=c('blue','red'),cex=0.7)
dev.off()
ls()
rm(list=ls())
setwd('/workspace/ywang31/Baggerly051512/BRAF')
library(gdata)
library(gplots)
library(survival)
lungData <- read.xls('BRAF_LUNG_TREATMENTPLAN.xlsx',as.is=TRUE,header=TRUE)
dim(lungData)
colnames(lungData)
grep('X',colnames(lungData))
rownames(lungData)
rownames(lungData) <- lungData$IPCT_No
Txp_Drugs <- lungData[,grep('Txp_Drugs',colnames(lungData))]
dim(Txp_Drugs)
head(Txp_Drugs)
rownames(Txp_Drugs)
all(rownames(Txp_Drugs)==rownames(lungData))
Vemurafenib <- apply(Txp_Drugs,2,function(x)grep('Vemurafenib',x))
Vemurafenib
length(unlist(Vemurafenib))
rownames(Txp_Drugs)[unlist(Vemurafenib)]
lungData['8250',c('Pt_Deceased','Pt_DeathDate','FollowUpDate','Txp_Drugs1','Trt_StartDate1','Trt_EndDate1')]
colnames(lungData)
lungData['8250',c('Pt_Deceased','Pt_DeathDate','FollowUpDate','Txp_Drugs1','Txp_StartDate1','Txp_EndDate1')]
Txp_StartDate <- lungData[,grep('Txp_StartDate',colnames(lungData))]
class(Txp_StartDate)
dim(Txp_StartDate)
head(Txp_StartDate)
Txp_EndDate <- lungData[,grep('Txp_EndDate',colnames(lungData))]
head(Txp_EndDate)
startDate <- apply(Txp_StartDate[,-1],2,as.Date)
dim(startDate )
head(startDate )
rownames(startDate) <- rownames(Txp_StartDate)
endDate <- apply(Txp_EndDate[,-10],2,as.Date)
rownames(endDate) <- rownames(Txp_StartDate)
response <- startDate-endDate
head(endDate)
rownames(startDate) <- rownames(Txp_StartDate)
endDate <- apply(Txp_EndDate[,-10],2,as.Date)
rownames(endDate) <- rownames(Txp_StartDate)
response <- startDate-endDate
startDate
dim(endDate)
dim(Txp_EndDate)
startDate <- apply(Txp_StartDate[,-1],2,as.Date)
rownames(startDate) <- rownames(Txp_StartDate)
endDate <- apply(Txp_EndDate[,-9],2,as.Date)
rownames(endDate) <- rownames(Txp_StartDate)
response <- startDate-endDate
dim(response )
head(response )
lungData[1:2,]
Txp_StartDate[1:2,]
Txp_EndDate[1:2,]
head(response)
i=1
lungData[i,'FollowUpDate']
response <- data.frame(response,regimen9=rep(NA,nrow(response)))
n.na <- apply(response,1,function(x)sum(is.na(x)))
dim(response)
n.na
temp.x<- try(as.Date(substr(lungData[i,'FollowUpDate'],1,10))-as.Date(substr(lungData[i,paste0('Txp_EndDate',11-n.na[i])],1,10)),silent=T)
temp.x
temp.x<- try(as.Date(substr(lungData[i,'FollowUpDate'],1,10))-as.Date(substr(lungData[i,paste0('Txp_EndDate',10-n.na[i])],1,10)),silent=T)
temp.x
10-n.na[i]
response[i,10-n.na[i]]
n.na <- apply(response,1,function(x)sum(is.na(x)))
for(i in 1:nrow(response)){
temp.x<- try(as.Date(substr(lungData[i,'FollowUpDate'],1,10))-as.Date(substr(lungData[i,paste0('Txp_EndDate',10-n.na[i])],1,10)),silent=T)
if(class(temp.x)=='try-error'){temp.x<- try(as.Date(substr(lungData[i,'FollowUpDate'],1,10))-as.Date(substr(lungData[i,paste0('Txp_StartDate',10-n.na[i])],1,10)),silent=T)}
if(class(temp.x)=='try-error'){temp.x<-NA}
response[i,10-n.na[i]] <- temp.x
}
head(response)
response[response<0] <- 0
colnames(response) <- paste0('Txp',1:9)
response <- as.matrix(response)
unlist(Vemurafenib[1:2])
rownames(Txp_Drugs)[unlist(Vemurafenib[1:2])]
rownames(Txp_Drugs)[unlist(Vemurafenib)]
selectedPts <- rownames(Txp_Drugs)[unlist(Vemurafenib)]
which.regimen <- data.frame(IPCT_ID=selectedPts,regimen=as.numeric(gsub('Txp_Drugs','',names(unlist(Vemurafenib)))))
which.regimen
names(unlist(Vemurafenib))
Vemurafenib
unlist(Vemurafenib))
unlist(Vemurafenib)
which.regimen <- data.frame(IPCT_ID=selectedPts,regimen=as.numeric(gsub('Txp_Drugs','',names(unlist(Vemurafenib)))))
which.regimen$regimen[which.regimen$regimen>10] <- as.integer(which.regimen$regimen[which.regimen$regimen>10]/10)
which.regimen
response1 <- response[selectedPts,]
response1
which(response1<0)
which.regimen <- data.frame(which.regimen,total.regimen=apply(response1,1,function(x)sum(!is.na(x))))
response1
which.regimen
rownames(Txp_Drugs)
subPts <- rownames(which.regimen)[which(which.regimen$regimen>2&which.regimen$regimen<9&which.regimen$regimen!=which.regimen$total.regimen)]
subPts
patient <- subPts[1]
plot(response1[patient,],main=paste0('Patient ',patient),xlab='Regimen Sequence',ylab='Response time (days)')
points(which.regimen[patient,'regimen'],response1[patient,which.regimen[patient,'regimen']],col='red')
text(which.regimen[patient,'regimen'],response1[patient,which.regimen[patient,'regimen']],col='red',label='Vemurafenib',pos=3,cex=0.6)
patient <- subPts[2]
plot(response1[patient,],main=paste0('Patient ',patient),xlab='Regimen Sequence',ylab='Response time (days)')
points(which.regimen[patient,'regimen'],response1[patient,which.regimen[patient,'regimen']],col='red')
text(which.regimen[patient,'regimen'],response1[patient,which.regimen[patient,'regimen']],col='red',label='Vemurafenib',pos=3,cex=0.6)
selectedPts2 <- rownames(Txp_Drugs)[unlist(Vemurafenib[1])]
selectedPts2
lungData[selectedPts2,c('Pt_Deceased','Pt_DeathDate','FollowUpDate','Txp_Drugs1','Txp_StartDate1','Txp_EndDate1')]
plot(response[,1],xlab='patients with lung cancer (n=87)',ylab='response length (days)',main='Response length of the first regimen')
temp.response <- response[selectedPts2,1]
temp.response[is.na(temp.response)] <- as.Date(substr(lungData[names(temp.response)[is.na(temp.response)],'FollowUpDate'],1,10))-as.Date(substr(lungData[names(temp.response)[is.na(temp.response)],'Txp_StartDate1'],1,10))
points(match(selectedPts2,rownames(response)),temp.response,col='red')
text(match(selectedPts2,rownames(response)),temp.response,col='red',label=names(temp.response),pos=4,cex=0.6)
myData <- data.frame(time=response[,1],response1=rep(1,nrow(lungData)),VemFirst=rep('no',nrow(lungData)),stringsAsFactors=FALSE)
rownames(myData) <- rownames(lungData)
myData$response1[which(lungData$Pt_Deceased=='N'&lungData$Txp_StartDate2=='')] <- 0
myData$response1[is.na(myData$time)] <- NA
myData[selectedPts2,'VemFirst'] <- 'yes'
mfit.response1 = survfit(Surv(time,response1 ==1)~VemFirst, data =myData)
surv.diff=survdiff(Surv(time,response1 ==1)~VemFirst, data =myData)
plot(mfit.response1 , xlab="Response time (days)",lwd=2, ylab="Survival Function",main=paste0('Lung Cancer Patients (N=',sum(mfit.response1$n),')\n p=',signif(1-pchisq(surv.diff$chisq,df=1),3)), col=c("blue","orangered"))
legend('topright',legend=paste0(names(mfit.response1$strata),' (n=',mfit.response1$n,')'), col=c("blue","orangered"),lwd=2)
save.image('BRAFstudy3.RData')
myData[selectedPts2,
]
selectedPts2
lungData[selectedPts2,c('Pt_Deceased','Pt_DeathDate','FollowUpDate','Txp_Drugs1','Txp_StartDate1','Txp_EndDate1')]
getwd()
getwd()
rm(list=ls())
setwd('/workspace/ywang31/Baggerly051512/Rpackage/')
getwd()
setwd('/home/ywang31/VitDpackage/')
setwd('/home/ywang31/VitDpackage')
library(devtools)
library(roxygen2)
library(knitr)
library(rmarkdown)
#After adding the new functions to R/ and then adding the roxygen2 comments in each .R function file,
#Add LICENSE file
document()
build()
install()
check()
devtools::use_vignette('cdcTalkAnnotations')
devtools::use_vignette('fitIomAdultModel')
getwd()
sessionInfo()
library(devtools)
library(roxygen2)
library(knitr)
library(rmarkdown)
#After adding the new functions to R/ and then adding the roxygen2 comments in each .R function file,
#Add LICENSE file
document()
build()
install()
check()
document()
build()
install()
check()
devtools::use_vignette('cdcTalkAnnotations')
devtools::install(build_vignettes = TRUE)
evtools::use_vignette('cdcTalkAnnotations')
devtools::use_vignette('cdcTalkAnnotations')
browseVignettes("VitDpackage")
devtools::use_vignette('fitIomAdultModel')
browseVignettes("VitDpackage")
document()
build()
#install()
devtools::install(build_vignettes = TRUE)
check()
browseVignettes("VitDpackage")
browseVignettes("VitDpackage")
library(VitDpackage)
browseVignettes("VitDpackage")
document()
build()
browseVignettes("VitDpackage")
getwd9)
getwd()
install()
browseVignettes("VitDpackage")
history()
devtools::use_vignette('fitIomAllModel')
browseVignettes("VitDpackage")
devtools::browseVignettes("VitDpackage")
browseVignettes('grid')
sessionInfo()
browseVignettes("VitDpackage")
browseVignettes("VitDpackage")
document()
build()
browseVignettes("VitDpackage")
document()
build()
#install()
devtools::install(build_vignettes = TRUE)
check()
browseVignettes("VitDpackage")
library(VitDpackage)
browseVignettes("VitDpackage")
document()
build()
#install()
devtools::install(build_vignettes = TRUE)
check()
browseVignettes("VitDpackage")
library(VitDpackage)
ls()
ls('package:VitDpackage')
browseVignettes("VitDpackage")
devtools:install_github(build_vignettes = TRUE)
devtools::install_github(build_vignettes = TRUE)
?devtools::install_github
?install
document()
build()
install(build_vignettes = TRUE)
check()
browseVignettes("VitDpackage")
getwd()
devtools::use_vignette('fitIomOldModel')
devtools::use_vignette('fitIomYoungModel')
devtools::use_vignette('luxwoldaFig')
devtools::use_vignette('wagnerFig')
document()
build()
install(build_vignettes = TRUE)
check()
setwd('/home/ywang31/VitDpackage')
library(devtools)
library(roxygen2)
library(knitr)
library(rmarkdown)
document()
build()
install(build_vignettes = TRUE)
check()
library(VitDpackage)
browseVignettes("VitDpackage")
ls()
getwd()
sessionInfo()
library(VitDpackage)
browseVignettes("VitDpackage")
library(devtools)
devtools::install_github("avinying/VitDpackage",build_vignettes = TRUE)
